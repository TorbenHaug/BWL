<%
  def product_structure_output_list(article, parent_amount, accu)
    lower_parts = ArticleStructure.where(upper_part: article)
    if (!lower_parts.empty?)
      accu.push("<ul>")
    end

    lower_parts.each {|item|
      count = parent_amount * item.amount
      accu.push("<li style=\"margin-bottom: 10px;\">" + count.to_s + "x " + link_to(item.lower_part.name, item.lower_part) + "</li>")
      product_structure_output_list(item.lower_part, count, accu)
    }

    if (!lower_parts.empty?)
      accu.push("</ul>")
    end

    return accu
  end

  def get_bill_count_with_articles(articles)
    bills = articles.map{|article|
      BillEntry.where(:article => article).map{|entry| entry.bill}.uniq
    }
  
    accu = nil
    bills.each{|bill|
      (accu.nil?) ? (accu = bill) : (accu = accu & bill)
    }
  
    return (accu.nil?) ? (0) : (accu.size)
  end
  
  def get_association_rule_learning_data
    bc_all = Bill.count
    bc_self = get_bill_count_with_articles([@article])
    
    result = []
    self_data = nil
    Article.all.each{|article|
      bc_other = get_bill_count_with_articles([article])
      bc_both = get_bill_count_with_articles([@article, article])

      support = (bc_all != 0) ? (100.0 * bc_both / bc_all) : (0.0)
      confidence = (bc_self != 0) ? (100.0 * bc_both / bc_self) : (0.0)
      
      data = [article, support, confidence]
      if (article != @article)
        result.push(data)
      else
        self_data = data
      end
    }
    
    result.sort!{|a, b|
      temp = b[2] <=> a[2]
      (temp == 0) ? (b[1] <=> a[1]) : temp}
    result.unshift(self_data)
    return result
  end

  def association_rule_learning_admin(association_rule_learning_data)
    min_support = 0.00001
    min_confidence = 0.00001
    
    association_rule_learning_data.shift
    association_rule_learning_data = association_rule_learning_data.reject{|article, support, confidence|
      (support < min_support) || (confidence < min_confidence)
    }
    
    result = []
    count_with_self = get_bill_count_with_articles([@article])
    if (count_with_self > 0)
        result = ["Insgesamt wurden #{Bill.count} Verkaufstransaktionen getätigt.<br/>" +
            "Der aktuelle Artikel kommt in #{count_with_self} dieser Verkaufstransaktionen vor.<br/>" +
            "Folgende Artikel kamen ebenfalls in diesen Verkaufstransaktionen vor:", "<br/><br/>",
            "<table border=\"1px\" bordercolor=\"#d3d7d9\" frame=\"void\" rules=\"rows\" style=\"margin-left: 20px; border: solid 1px #d3d7d9\">", "<tr>",
            "<td style=\"padding: 5px;\"><strong>Artikelbezeichnung</strong></td>",
            "<td style=\"text-align: center; width: 65px; padding: 5px;\"><strong>Konfidenz</strong></td>",
            "<td style=\"text-align: center; width: 60px; padding: 5px;\"><strong>Support</strong></td>", "</tr>"]
        result.concat(association_rule_learning_data.map{|article, support, confidence|
            "<tr><td style=\"padding: 5px;\">#{link_to article.name, article}</td>" +
            "<td style=\"text-align: center; padding: 5px;\">#{confidence.round(2)}%</td>" +
            "<td style=\"text-align: center; padding: 5px;\">#{support.round(2)}%</td></tr>"})
        result.push("</table>")
    else
        result = ["Insgesamt wurden #{Bill.count} Verkaufstransaktionen getätigt.<br/>" +
            "Der aktuelle Artikel kommt in keiner dieser Verkaufstransaktionen vor."]
    end
  
    return result
  end

  def association_rule_learning_user(association_rule_learning_data)
    result = []
    
    association_rule_learning_data = association_rule_learning_data[1..4]
    result.push("<div style=\"margin-top: 20px; margin-left: 1px;\">")
    result.concat(association_rule_learning_data.map{|key, val|
        "<div style=\"width: 146px; display: inline-block; vertical-align: top;\">" +
        "<div style=\"width: 125px;\">" + 
        "#{image_tag key.photo.url(:small), size: "125"}" + 
        "#{link_to key.name, key}</div></div>"})
    result.push("</div>")
    
    return result
  end

  def get_menus_data
    result = []
    ArticleToTag.where(:article => @article).each{|item|
      MenuToTag.where(:tag => item.tag).each{|inner_item|
        result.push(inner_item.menu)}}
    result.delete(nil)
    
    return result
  end

  def get_products_of_menu(menu)
    result = []
    MenuToTag.where(:menu => menu).each{|item|
      ArticleToTag.where(:tag => item.tag).each{|inner_item|
        result.push(inner_item.article)}}
    result.delete(nil)
    
    return result
  end

  def get_place_at_menu_and_size_of_menu(menu)
    buyed_count = {}
    get_products_of_menu(menu).each{|item| buyed_count[item] = 0;
      BillEntry.where(:article => item).each{|inner_item|
        buyed_count[item] = buyed_count[item] + inner_item.amount}}
    
    temp = buyed_count.map{|key, val| [key, val]}
    temp.sort!{|a, b| b[1] <=> a[1]}
    
    temp.each_with_index{|item, index|
      (item[0] == @article) ? (return [index + 1, temp.size]) : (nil)}
  end

  def best_list_output
    result = []
    
    menus_data = get_menus_data
    menus_data.each{|item| place, size = get_place_at_menu_and_size_of_menu(item)
      result.push("Platz #{place} (von #{size}) in " + 
      link_to(item.name, by_menu_path(:menu_id => item.id)).to_s)}
    
    return result.flat_map{|item| [item, "<br/>"]}[0...-1]
  end
%>



<div class="post">
    <table style="width: 100%;">
        <tr>
            <td><h1><%= @article.name %></h1></td>
            <td width="180px" height="150px" align="right"><%= image_tag @article.photo.url(:small) %></td>
        </tr>
    </table>

    <div class="post" style="margin-top: 30px;">
        <p>
          <strong>Produktbezeichnung:<br/></strong>
          <%= @article.name %>
        </p>

        <p>
          <strong>Produktbeschreibung:<br/></strong>
          <%= @article.description %>
        </p>

        <p>
          <strong>Preis:</strong>
          <%= float_to_euro_string(@article.price) %>
        </p>
        
        <%= viewtag_seperator_without_space_bottom %>
        <p>
            <div style="width: 596px;">
                <div style="min-height: 53px; width: 375px; padding-top: 30px; padding-bottom: 30px; margin-top: -13px; margin-bottom: -14px; border-right: solid 1px #d3d7d9; float: left;">
                    <strong>Bestseller-Rang:</strong><br/>
                    <% best_list_output.each{|item| %>
                        <%= item.html_safe %>
                    <% } %>
                </div>
                <div style="width: 178px; padding-top: 17px; padding-bottom: 16px; float: right; text-align: center;">
                    <%= form_tag(add_to_shopping_card_path, method: "post") do %>
                        <div style="margin-bottom: 10px">
                            Menge:&nbsp;&nbsp;&nbsp;
                            <%= select_tag :amount, options_for_select((1..10).step(1)) %>
                        </div>
                        <div style="display: none;">
                            <%= text_field_tag :article_id, @article.id %>
                        </div>
                        <%= submit_tag("Zum Warenkorb hinzufügen") %>
                    <% end %>
                </div>
                <div style="clear: both;"></div>
            </div>
        </p>
        
        <%= viewtag_seperator_without_space_top %>
        <% if (admin_user?) %>
            <strong>Assoziationsanalyse:</strong><br/>
            <% association_rule_learning_admin(get_association_rule_learning_data).each {|line| %>
                <%= line.html_safe %>
            <%} %>
        <% else %>
            <strong>Kunden, die diesen Artikel gekauft haben, kauften auch:</strong>
            <% association_rule_learning_user(get_association_rule_learning_data).each {|line| %>
                <%= line.html_safe %>
            <%} %>
        <% end %>
        
        <% product_structure_output = product_structure_output_list(@article, 1, []) %>
        <% if (!product_structure_output.empty?) %>
            <%= viewtag_seperator %>
            <p>
                <strong>Strukturstückliste:</strong><br/>
                <% product_structure_output.each {|line| %>
                    <%= line.html_safe %>
                <%} %>
            </p>
        <% end %>

        <% if (admin_user?) %>
            <%= viewtag_seperator %>
            <p>
              <strong>Erstellt am:</strong>
              <%= get_german_date_time_ordinal(@article.created_at.to_datetime) %>
            </p>

            <% if (!@article.deleted_at.nil?) %>
              <p>
                <strong>Gelöscht am:</strong>
                <%= get_german_date_time_ordinal(@article.deleted_at.to_datetime) %>
              </p>
            <% end %>
            
            <p>
              <%= viewtag_admin %><br/>
              <%= link_to 'Bearbeiten', edit_article_path(@article) %> | 
              <%= link_to 'Zurück', articles_path %>
            </p>
        <% end %>    
    </div>
</div>
